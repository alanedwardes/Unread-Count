var content = document.getElementById('content');var settings = new Settings();// Preview Imagevar preview = document.getElementById('preview');var previewCountInt = 2;var previewCount = new Count();previewCount.setFavicon('page_white.png');previewCount.setCanvas(preview);previewCount.setCount(previewCountInt);previewCount.generate(true);preview.onclick = function(e){	var enteredCount;	do	{		var promptResult = prompt("Enter a number to preview:", previewCountInt);		if (!promptResult) break;				enteredCount = parseInt(promptResult);	} while (enteredCount <= 0 || isNaN(enteredCount) || enteredCount > 999);		if (enteredCount)	{		previewCountInt = enteredCount;		previewCount.setCount(previewCountInt);		previewCount.generate();	}}// Included / Excluded Sharedfunction addSite(site, element, setting){	var sites = settings.get(setting);	var button = document.createElement('button');	button.innerHTML = '<span>x</span>' + site;	button.title = 'Remove ' + site;	button.onclick = function(e)	{		sites.splice(sites.indexOf(site), 1);		settings.set(setting, sites);		button.parentElement.removeChild(button);	}	element.insertBefore(button, element.children[0]);}// Included Sitesvar includedSitesDiv = document.getElementById('includedSites');var includedSite = document.getElementById('includedSite');var includedSites = settings.get(settings.names.includedSites);for (var i = 0; i < includedSites.length; i++){	addSite(includedSites[i], includedSitesDiv, settings.names.includedSites);}includedSite.onfocus = function(e){	includedSite.value = '';}includedSite.onkeyup = function(e){	if (e.which === 13)	{		addSite(includedSite.value, includedSitesDiv, settings.names.includedSites);		var includedSites = settings.get(settings.names.includedSites);		includedSites.push(includedSite.value);		settings.set(settings.names.includedSites, includedSites);		includedSite.value = '';		includedSite.focus();	}}// Excluded Sitesvar excludedSitesDiv = document.getElementById('excludedSites');var excludedSite = document.getElementById('excludedSite');var excludedSites = settings.get(settings.names.excludedSites);for (var i = 0; i < excludedSites.length; i++){	addSite(excludedSites[i], excludedSitesDiv, settings.names.excludedSites);}excludedSite.onfocus = function(e){	excludedSite.value = '';}excludedSite.onkeyup = function(e){	if (e.which === 13)	{		addSite(excludedSite.value, excludedSitesDiv, settings.names.excludedSites);		var excludedSites = settings.get(settings.names.excludedSites);		excludedSites.push(excludedSite.value);		settings.set(settings.names.excludedSites, excludedSites);		excludedSite.value = '';		excludedSite.focus();	}}// Background Colourvar backgroundColour = document.getElementById('backgroundColour');backgroundColour.value = settings.get(settings.names.backgroundColour);content.style.borderColor = backgroundColour.value;backgroundColour.onchange = function(){	settings.set(settings.names.backgroundColour, backgroundColour.value);	content.style.borderColor = backgroundColour.value;	previewCount.generate();}// Font Colourvar fontColour = document.getElementById('fontColour');fontColour.value = settings.get(settings.names.fontColour);fontColour.onchange = function(){	settings.set(settings.names.fontColour, fontColour.value);	previewCount.generate();}// Font Sizevar fontSizeLabel = document.getElementById('fontSizeLabel');var fontSize = document.getElementById('fontSize');fontSize.value = settings.get(settings.names.fontSize);fontSizeLabel.innerHTML = fontSize.value;fontSize.onchange = function(){	settings.set(settings.names.fontSize, fontSize.value);	fontSizeLabel.innerHTML = fontSize.value;	previewCount.generate();}// Font Family// list from here: http://www.lalit.org/lab/javascript-css-font-detect/// I'm using the wonderful font detector script, too.var fontFamily = document.getElementById('fontFamily');var fonts = [	'cursive', 'monospace', 'serif', 'sans-serif', 'fantasy', 'default',	'Arial', 'Arial Black', 'Arial Narrow', 'Arial Rounded MT Bold',	'Bookman Old Style', 'Bradley Hand ITC', 'Century', 'Century Gothic',	'Comic Sans MS', 'Courier', 'Courier New', 'Georgia', 'Gentium', 'Impact',	'King', 'Lucida Console', 'Lalit', 'Modena', 'Monotype Corsiva', 'Papyrus',	'Tahoma', 'TeX', 'Times', 'Trebuchet MS', 'Verdana', 'Verona'];for (var i = 0; i < fonts.length; i++){	var detector = new Detector();	if (detector.test(fonts[i]))	{		var option = document.createElement('option');		option.innerHTML = fonts[i];		fontFamily.add(option);	}}fontFamily.value = settings.get(settings.names.fontFamily);fontFamily.onchange = function(){	settings.set(settings.names.fontFamily, fontFamily.value);	previewCount.generate();}// Pinned onlyvar pinnedOnly = document.getElementById('pinnedOnly');pinnedOnly.onchange = function(){	settings.set(settings.names.pinnedOnly, pinnedOnly.checked);}pinnedOnly.checked = settings.get(settings.names.pinnedOnly);// Show notificationsvar showNotifications = document.getElementById('showNotifications');showNotifications.onchange = function(){	settings.set(settings.names.showNotifications, showNotifications.checked);}showNotifications.checked = settings.get(settings.names.showNotifications);// Resetvar reset = document.getElementById('reset');reset.onclick = function(){	settings.reset();	document.location = document.location;}