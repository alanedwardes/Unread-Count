var fontSize = document.getElementById('fontSize');var fontFamily = document.getElementById('fontFamily');var fontColour = document.getElementById('fontColour');var backgroundColour = document.getElementById('backgroundColour');var content = document.getElementById('content');var preview = document.getElementById('preview');var includedSitesDiv = document.getElementById('includedSites');var includedSite = document.getElementById('includedSite');var settings = new Settings();function addIncludedSite(site){	var button = document.createElement('button');	button.innerHTML = 'x ' + site;	button.title = 'Click to remove ' + site;	var includedSites = settings.get(settings.names.includedSites);	button.onclick = function(e)	{		var index = includedSites.indexOf(site);		includedSites.splice(index, 1);		settings.set(settings.names.includedSites, includedSites);		button.parentElement.removeChild(button);		includedSite.focus();	}	includedSitesDiv.insertBefore(button, includedSitesDiv.children[0]);}includedSite.onfocus = function(e){	includedSite.value = '';}includedSite.onkeyup = function(e){	if (e.which === 13)	{		addIncludedSite(includedSite.value);		var includedSites = settings.get(settings.names.includedSites);		includedSites.push(includedSite.value);		settings.set(settings.names.includedSites, includedSites);		includedSite.value = '';	}}var previewCountInt = 2;var previewCount = new Count();previewCount.setFavicon('page_white.png');previewCount.setCanvas(preview);previewCount.setCount(previewCountInt);previewCount.generate(true);preview.onclick = function(e){	var enteredCount;	do	{		var promptResult = prompt("Enter a number to preview:", previewCountInt);		if(!promptResult) break;				enteredCount = parseInt(promptResult);	} while (enteredCount <= 0 || isNaN(enteredCount));		if (enteredCount)	{		previewCountInt = enteredCount;		previewCount.setCount(previewCountInt);		previewCount.generate();	}}fontSize.value = settings.get(settings.names.fontSize);fontColour.value = settings.get(settings.names.fontColour);fontFamily.value = settings.get(settings.names.fontFamily);backgroundColour.value = settings.get(settings.names.backgroundColour);content.style.borderColor = backgroundColour.value;var includedSites = settings.get(settings.names.includedSites);for (var i = 0; i < includedSites.length; i++){	addIncludedSite(includedSites[i]);}fontSize.onchange = function(){	settings.set(settings.names.fontSize, fontSize.value);	previewCount.generate();}fontFamily.onchange = function(){	settings.set(settings.names.fontFamily, fontFamily.value);	previewCount.generate();}fontColour.onchange = function(){	settings.set(settings.names.fontColour, fontColour.value);	previewCount.generate();}backgroundColour.onchange = function(){	settings.set(settings.names.backgroundColour, backgroundColour.value);	content.style.borderColor = backgroundColour.value;	previewCount.generate();}